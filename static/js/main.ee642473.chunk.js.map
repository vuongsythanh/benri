{"version":3,"sources":["firebase/firebaseConfig.js","App.js","serviceWorker.js","index.js"],"names":["firebaseConfig","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","_useState","useState","_useState2","Object","slicedToArray","data","setData","fetchData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","database","ref","child","sent","on","snap","resData","val","stop","apply","this","arguments","useEffect","SearchBar","Search","ToggleList","ColumnToggle","options","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","sizePerPageList","text","value","react_default","createElement","Container","className","Row","Col","Jumbotron","href","react_bootstrap_table2_toolkit_lib_default","keyField","columns","dataField","headerStyle","column","colIndex","backgroundColor","hidden","columnToggle","search","props","assign","columnToggleProps","searchProps","placeholder","style","padding","fontWeight","lib_default","responsive","striped","hover","baseProps","pagination","paginationFactory","noDataIndication","filter","filterFactory","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee642473.chunk.js","sourcesContent":["import * as firebase from 'firebase';\nconst config = {\n    apiKey: \"AIzaSyDJ13jFF3v2QTVydXZ5vCVy8AsdCdqQwCk\",\n    authDomain: \"benri-2c1bb.firebaseapp.com\",\n    databaseURL: \"https://benri-2c1bb.firebaseio.com\",\n    projectId: \"benri-2c1bb\",\n    storageBucket: \"benri-2c1bb.appspot.com\",\n    messagingSenderId: \"337467238662\",\n    appId: \"1:337467238662:web:2bd727115d6d4b4f\"\n};\nlet firebaseConfig = firebase.initializeApp(config);\nexport default firebaseConfig;","import React, { useState, useEffect} from 'react';\nimport firebase from './firebase/firebaseConfig';\nimport { Container, Row, Col, Jumbotron } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search, ColumnToggle } from 'react-bootstrap-table2-toolkit';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport filterFactory from 'react-bootstrap-table2-filter';\n\nfunction App() {\n\n  const [data, setData] = useState([]);\n\n  const fetchData = async () => {\n    const result = await firebase.database().ref().child(\"words\");\n    result.on(\"value\", snap => {\n      let resData = snap.val();\n      setData(resData)\n    })\n  }\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const { SearchBar } = Search;\n  const { ToggleList } = ColumnToggle;\n\n  const options = {\n    paginationSize: 4,\n    pageStartIndex: 1,\n    firstPageText: '<<',\n    prePageText: '<',\n    nextPageText: '>',\n    lastPageText: '>>',\n    sizePerPageList: [{\n      text: '50', value: 50\n    },{\n      text: '100', value: 100\n    }\n  ]\n  };\n\n  const columns = [{\n    text: 'Từ vựng',\n    dataField: 'jp',\n    headerStyle: (column, colIndex) => {\n      if (colIndex % 2 === 0) {\n        return {\n          backgroundColor: '#81c784'\n        };\n      }\n      return {\n        backgroundColor: '#c8e6c9'\n      };\n    }\n  }, {\n    text: 'Âm hán việt',\n    dataField: 'vn',\n    headerStyle: (column, colIndex) => {\n      if (colIndex % 2 === 0) {\n        return {\n          backgroundColor: '#81c784'\n        };\n      }\n      return {\n        backgroundColor: '#c8e6c9'\n      };\n    }\n  }, {\n    text: 'Cách đọc',\n    dataField: 'read',\n    hidden: true,\n    headerStyle: (column, colIndex) => {\n      if (colIndex % 2 === 0) {\n        return {\n          backgroundColor: '#81c784'\n        };\n      }\n      return {\n        backgroundColor: '#c8e6c9'\n      };\n    }\n  }, {\n    text: 'Ý nghĩa',\n    dataField: 'meaning',\n    headerStyle: (column, colIndex) => {\n      if (colIndex % 2 === 0) {\n        return {\n          backgroundColor: '#81c784'\n        };\n      }\n      return {\n        backgroundColor: '#c8e6c9'\n      };\n    }\n  }, {\n    text: 'Cách nhớ',\n    dataField: 'note',\n    hidden: true,\n    headerStyle: (column, colIndex) => {\n      if (colIndex % 2 === 0) {\n        return {\n          backgroundColor: '#81c784'\n        };\n      }\n      return {\n        backgroundColor: '#c8e6c9'\n      };\n    }\n  }, {\n    text: 'Trình độ',\n    dataField: 'level',\n    hidden: true,\n    headerStyle: (column, colIndex) => {\n      if (colIndex % 2 === 0) {\n        return {\n          backgroundColor: '#81c784'\n        };\n      }\n      return {\n        backgroundColor: '#c8e6c9'\n      };\n    }\n  }, {\n    text: 'Loại từ',\n    dataField: 'type',\n    hidden: true,\n    headerStyle: (column, colIndex) => {\n      if (colIndex % 2 === 0) {\n        return {\n          backgroundColor: '#81c784'\n        };\n      }\n      return {\n        backgroundColor: '#c8e6c9'\n      };\n    }\n  }];\n\n  return (\n    <Container className=\"mt-4\">\n      <Row>\n        <Col>\n        <Jumbotron className=\"shadow-sm p-4 mb-4 bg-white rounded\">\n          <h1>Chào bạn hữu!</h1>\n          <br/>\n          <div className=\"alert alert-primary\">\n            <a href=\"null\" className=\"alert-link\">Nếu bạn đang loay hoay </a>\n            <a href=\"null\">tra nghĩa từ vựng theo âm hán việt. </a>\n            <a href=\"null\">Tra nghĩa từ vựng theo cấp N2-N3-N4-N5. </a>\n            <a href=\"null\">Khó nhớ 2136 hán tự. </a>\n            <a href=\"null\" className=\"alert-link\">Thì đây là tiện ích bạn cần!</a>\n          </div>\n        </Jumbotron>\n        </Col>\n      </Row>\n      <Row className=\"mb-5\">\n        <Col className=\"mb-5\">\n          <ToolkitProvider\n            keyField=\"jp\"\n            data={ data }\n            columns={ columns }\n            columnToggle\n            search\n          >\n            {\n              props => (\n                <div>\n                  <p className=\"text-muted font-weight-light\">(*) Ấn vào tên cột để ẩn bớt cột \n                    <em>(hiển thị tốt hơn đối với các thiết bị di động).</em>\n                  </p>\n                  <ToggleList \n                    { ...props.columnToggleProps } \n                    className=\"customToggleList\"\n                  />\n                  \n                  <br/>\n                  <hr className=\"my-2\" />\n                  <br/>\n                  <SearchBar \n                    { ...props.searchProps } \n                    className=\"custome-search-field mb-4\"\n                    placeholder=\"Nhập từ cần tìm...\"\n                    style={{padding:'1.5rem', fontWeight: 'bold'}}\n                  />\n                  <BootstrapTable\n                    responsive\n                    striped\n                    hover\n                    { ...props.baseProps }\n                    pagination={ paginationFactory(options) }\n                    noDataIndication=\"Lấy dữ liệu...\"\n                    filter={ filterFactory() }\n                  />\n                </div>\n              )\n            }\n          </ToolkitProvider>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\n\nReactDOM.render( < App / > , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}